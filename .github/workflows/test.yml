name: Reusable - Test .NET

on:
  workflow_call:
    inputs:
      dotnet-version:
        type: string
        default: "9.0.x"
        required: true
      test-project:
        description: "Path to test project"
        type: string
        required: false
      min_coverage_pct:
        type: number
        required: true
        default: 75
      os:
        type: string
        required: false
        default: '["ubuntu-latest"]'
      configuration:
        description: "The type of build to produce, e.g. Release vs Debug"
        type: string
        required: false
        default: "Release"

permissions:
  contents: read

env:
  CI: "true"
  ARTIFACTS_DIR: "Artifacts"

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(inputs.os) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          cache: true
          cache-dependency-path: |
            **/packages.lock.json
            **/*.csproj

      - name: Make Scripts Executable
        run: chmod u+x ./scripts/bash/*.sh

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: --external-sources --check-sourced
        with:
          scandir: ./scripts/bash
          check_together: true
          severity: error
          ignore_names: |
            _common.sh
            run-test-utils.sh
            scratch*.sh
            self-test.sh

      - name: Run script for unit test with coverage
        shell: bash
        env:
          MIN_COVERAGE_PCT: ${{ inputs.min_coverage_pct }}
          TEST_PROJECT: ${{ inputs.test-project }}
          CONFIGURATION: ${{ inputs.configuration }}
        run: |
          ./scripts/bash/run-tests.sh ${{ inputs.test-project }} --verbose

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: ${{ env.ARTIFACTS_DIR }}
