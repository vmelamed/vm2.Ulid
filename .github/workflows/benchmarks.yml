name: Reusable - Benchmarks

on:
  workflow_call:
    inputs:
      os:
        description: "Runner OS-s"
        type: string
        required: true
        default: '["ubuntu-latest"]'

      dotnet-version:
        description: "Version of .NET SDK to use"
        type: string
        required: true
        default: "9.0.x"

      benchmark-project:
        description: "Path to the benchmark project"
        type: string
        required: false
        default: "./benchmarks/UlidType.Benchmarks/UlidType.Benchmarks.csproj"

      configuration:
        description: "The type of build to produce, e.g. Release vs Debug"
        type: string
        required: false
        default: "Release"

      define:
        description: "Define constants to pass to the compiler"
        type: string
        required: false
        default: ""

      verbose:
        description: "Whether to enable verbose logging"
        type: boolean
        required: false
        default: false

      max-regression-pct:
        description: "Maximum acceptable performance regression percentage"
        type: number
        required: true
        default: 10 # percent

      force-new-baseline:
        description: "Ignore the existing baseline and force a new baseline"
        type: boolean
        required: true
        default: false

permissions:
  contents: read

env:
  # these must be the same across all jobs and steps
  CI: true
  ARTIFACTS_DIR: BmArtifacts
  SUMMARIES_DIR: BmArtifacts/summaries
  BASELINE_DIR: BmArtifacts/baseline
  FORCE_NEW_BASELINE: ${{ inputs.force-new-baseline || vars.FORCE_NEW_BASELINE || false }}

jobs:
  benchmarks:
    name: Benchmarks (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(inputs.os) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          cache: true
          cache-dependency-path: |
            **/packages.lock.json
            **/*.csproj

      - name: Download baseline benchmark summaries artifact
        if: ${{ !inputs.force-new-baseline }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: benchmark-baseline-${{ matrix.os }}
          path: ${{ env.BASELINE_DIR }}

      - name: Run the benchmarks
        shell: bash
        env:
          FORCE_NEW_BASELINE: ${{ inputs.force-new-baseline }}
          VERBOSE: ${{ inputs.verbose || false }}
        run: >-
          ./scripts/bash/run-benchmarks.sh ${{ inputs.benchmark-project }}
          --max-regression-pct "${{ inputs.max-regression-pct }}"
          --define "${{ inputs.define }}"
          --configuration "${{ inputs.configuration }}"

      - name: Upload benchmark summaries artifact
        uses: actions/upload-artifact@v4
        with:
          name: summaries-${{ matrix.os }}
          path: ${{ env.SUMMARIES_DIR }}
          if-no-files-found: error
          overwrite: true
          retention-days: 90

      - name: Upload benchmark results artifact as a new baseline
        if: ${{ inputs.force-new-baseline || env.FORCE_NEW_BASELINE || false }}
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-baseline-${{ matrix.os }}
          path: ${{ env.SUMMARIES_DIR }}
          if-no-files-found: error
          overwrite: true
          retention-days: 90
