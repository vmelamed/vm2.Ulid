name: Download Baseline Artifact

on:
  workflow_call:
    inputs:
      os:
        description: "Runner OS-s"
        type: string
        required: true
        default: '["ubuntu-latest"]'

      dotnet-version:
        description: "Version of .NET SDK to use"
        type: string
        required: true
        default: "9.0.x"

      repo:
        description: "Repository in owner/name format"
        type: string
        required: true
        default: ${{ github.repository }}

      workflow:
        description: "Workflow file name or ID"
        type: string
        required: true
        default: "benchmarks.yaml"

      artifact-name:
        description: "Name of the artifact to find"
        type: string
        required: true
        default: "baseline"

jobs:
  download-baseline:
    name: Download Baseline Artifact
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJson(inputs.os) }}

    steps:
      - name: Install GitHub CLI
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Authenticate to GitHub CLI
        shell: bash
        run: |
          gh auth login --with-token "${{ secrets.GITHUB_TOKEN }}"

      - name: Find and download baseline artifact
        shell: bash
        run: |
          RUNS=$(gh run list \
            --repo "${{ inputs.repo }}" \
            --workflow "${{ inputs.workflow }}" \
            --status success \
            --limit 20 \
            --json databaseId | jq '.[].databaseId')

          for RUN_ID in $RUNS; do
            ARTIFACTS=$(gh api repos/${{ inputs.repo }}/actions/runs/$RUN_ID/artifacts --jq '.artifacts[].name')
            if echo "$ARTIFACTS" | grep -q "^${{ inputs.artifact-name }}$"; then
              echo "Found '${{ inputs.artifact-name }}' in run $RUN_ID"
              gh run download --repo "${{ inputs.repo }}" --run-id "$RUN_ID" --name "${{ inputs.artifact-name }}"
              exit 0
            fi
          done

          echo "No successful run found with artifact '${{ inputs.artifact-name }}'"
          exit 1
