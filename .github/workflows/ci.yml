name: CI - Build, Test, Coverage & Benchmarks

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
    inputs:
      os:
        description: 'JSON array of runners'
        default: '["ubuntu-latest"]'
        required: true
      dotnet_version:
        description: 'Version of .NET SDK to use'
        default: '9.0.x'
        required: true
      test_project:
        description: 'Path to test project'
        default: './test/UlidType.Tests/UlidType.Tests.csproj'
        required: true
      coverage_threshold:
        description: 'Minimum acceptable code coverage percentage'
        default: '75'
        required: true
      run_benchmarks:
        description: 'Whether to run benchmarks and compare against baseline'
        type: boolean
        default: true
        required: true
      benchmark_project:
        description: 'Path to benchmark project'
        default: './benchmarks/UlidType.Benchmarks/UlidType.Benchmarks.csproj'
        required: true
      regression_threshold:
        description: 'Maximum acceptable performance regression percentage'
        default: '10'
        required: true
      force_new_baseline:
        description: 'Whether to force new baseline (if true, no regression check is done)'
        type: boolean
        default: false
        required: true

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  MATRIX_OS:            ${{ inputs.os                        || vars.MATRIX_OS            || '["ubuntu-latest"]' }}

  DOTNET_VERSION:       ${{ inputs.dotnet_version            || vars.DOTNET_VERSION       || '9.0.x' }}

  TEST_PROJECT:         ${{ inputs.test_project              || vars.TEST_PROJECT         || './test/UlidType.Tests/UlidType.Tests.csproj' }}
  COVERAGE_THRESHOLD:   ${{ inputs.coverage_threshold        || vars.COVERAGE_THRESHOLD   || '75' }} # percent

  RUN_BENCHMARKS:       ${{ inputs.run_benchmarks            || vars.RUN_BENCHMARKS       || 'true' }}  # "true" to run benchmarks and compare against baseline
  FORCE_NEW_BASELINE:   ${{ inputs.force_new_baseline        || vars.FORCE_NEW_BASELINE   || 'false' }} # "true" to force the current benchmarks results as the new baseline
  BENCHMARK_PROJECT:    ${{ inputs.benchmark_project         || vars.BENCHMARK_PROJECT    || './benchmarks/UlidType.Benchmarks/UlidType.Benchmarks.csproj' }}
  REGRESSION_THRESHOLD: ${{ inputs.regression_threshold      || vars.REGRESSION_THRESHOLD || '10' }} # percent allowed performance regression

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    if: >
      ${{ github.event_name != 'push' ||
      (!contains(github.event.head_commit.message, '[skip ci]')) &&
      (!contains(github.event.head_commit.message, '[no ci]')) }}
    with:
      dotnet_version: ${{ inputs.dotnet_version || vars.DOTNET_VERSION || '9.0.x' }}
      os: ${{ inputs.os || vars.MATRIX_OS || '["ubuntu-latest"]' }}

  test:
    name: Test
    needs: build
    uses: ./.github/workflows/test.yml
    with:
      dotnet_version: ${{ inputs.dotnet_version || vars.DOTNET_VERSION || '9.0.x' }}
      test_project: ${{ inputs.test_project || vars.TEST_PROJECT || './test/UlidType.Tests/UlidType.Tests.csproj' }}
      coverage_threshold: ${{ inputs.coverage_threshold || vars.COVERAGE_THRESHOLD || '75' }}
      os: ${{ inputs.os || vars.MATRIX_OS || '["ubuntu-latest"]' }}

  benchmarks:
    name: Benchmarks (Linux only)
    needs: build
    if: ${{ fromJSON(inputs.run_benchmarks) || fromJSON(vars.RUN_BENCHMARKS) || 'true' }}
    uses: ./.github/workflows/benchmarks.yml
    with:
      dotnet_version: ${{ inputs.dotnet_version || vars.DOTNET_VERSION || '9.0.x' }}
      benchmark_project: ${{ inputs.benchmark_project || vars.BENCHMARK_PROJECT || './benchmarks/UlidType.Benchmarks/UlidType.Benchmarks.csproj' }}
      force_new_baseline: ${{ inputs.force_new_baseline || vars.FORCE_NEW_BASELINE || 'false' }}
      regression_threshold: ${{ inputs.regression_threshold || vars.REGRESSION_THRESHOLD || '10' }}
