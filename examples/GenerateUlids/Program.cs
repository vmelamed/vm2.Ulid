using System.Text;

using vm2;

using static System.Console;

WriteLine($"Generated by ULID factory:");
WriteLine($"--------------------------");

var ulidFactory = new UlidFactory();
var ulid = ulidFactory.NewUlid();

Display(ulid);

var ulidStr = ulid.ToString();
WriteLine($"From UTF-8 string: {ulidStr} (round-trip)");
WriteLine($"-----------------------------------------");
var ulid2 = new Ulid(Encoding.UTF8.GetBytes(ulidStr));

Display(ulid2);

WriteLine(ulidFactory.NewUlid().ToString());
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine($"--------------------------");
Task.Delay(1).Wait();   // wait 1ms to ensure different timestamp
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine($"--------------------------");
Task.Delay(1).Wait();
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine(ulidFactory.NewUlid().ToString());
WriteLine();

static void Display(Ulid ulid)
{
    byte[] bytes = ulid.Bytes.ToArray();
    DateTimeOffset timestamp = ulid.Timestamp;
    byte[] randomBytes = ulid.RandomBytes.ToArray();

    WriteLine($"As a string:   \"{ulid}\"");
    WriteLine($"  Timestamp:   {timestamp:o}", timestamp);
    WriteLine($"  RandomBytes: {string.Join("-", randomBytes.Select(b => b.ToString("X2")))}");
    WriteLine($"As byte array: {string.Join("-", bytes.Select(b => b.ToString("X2")))}");
    WriteLine($"As Guid:       {ulid.ToGuid()}");
    WriteLine();
}