[*]
guidelines = 128

# C# project files
[*.{csproj}]
charset = utf-8-bom
indent_style = space
indent_size = 4
insert_final_newline = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

# Spell checker
spelling_languages = en-us
spelling_checkable_types = strings,identifiers,comments
spelling_error_severity = information

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_collection_expression = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = false

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:silent
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion

# Code-block preferences
csharp_prefer_braces = false:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_prefer_top_level_statements = true:silent

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:none

# 'using' directive preferences
csharp_using_directive_placement = inside_namespace:silent

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:suggestion
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = false:suggestion
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false:suggestion
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:suggestion

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = types,methods,properties,anonymous_methods,control_blocks,anonymous_types,lambdas,accessors,switch_clauses,object_initializers,collection_initializers,expression_bodied_members
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = ignore
csharp_space_around_declaration_statements = ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.enum_should_be_pascal_case.severity = warning
dotnet_naming_rule.enum_should_be_pascal_case.symbols = enum
dotnet_naming_rule.enum_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.async_method_or_function_should_be_async_pascal_case.severity = warning
dotnet_naming_rule.async_method_or_function_should_be_async_pascal_case.symbols = async_method_or_function
dotnet_naming_rule.async_method_or_function_should_be_async_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.method_should_be_pascal_case.severity = warning
dotnet_naming_rule.method_should_be_pascal_case.symbols = method
dotnet_naming_rule.method_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.public_const_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_const_field_should_be_pascal_case.symbols = public_const_field
dotnet_naming_rule.public_const_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_public_const_member_should_be_camel_case.severity = warning
dotnet_naming_rule.non_public_const_member_should_be_camel_case.symbols = non_public_const_member
dotnet_naming_rule.non_public_const_member_should_be_camel_case.style = camel_case

dotnet_naming_rule.public_static_readonly_field_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_static_readonly_field_should_be_pascal_case.symbols = public_static_readonly_field
dotnet_naming_rule.public_static_readonly_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_public_static_readonly_fields_should_be_camel_case.severity = none
dotnet_naming_rule.non_public_static_readonly_fields_should_be_camel_case.symbols = non_public_static_readonly_fields
dotnet_naming_rule.non_public_static_readonly_fields_should_be_camel_case.style = camel_case

dotnet_naming_rule.public_static_field_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_static_field_should_be_pascal_case.symbols = public_static_field
dotnet_naming_rule.public_static_field_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.field_should_be_private_field.severity = warning
dotnet_naming_rule.field_should_be_private_field.symbols = field
dotnet_naming_rule.field_should_be_private_field.style = private_field

dotnet_naming_rule.local_varaible_should_be_camel_case.severity = warning
dotnet_naming_rule.local_varaible_should_be_camel_case.symbols = local_varaible
dotnet_naming_rule.local_varaible_should_be_camel_case.style = camel_case

dotnet_naming_rule.public_delegate_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_delegate_should_be_pascal_case.symbols = public_delegate
dotnet_naming_rule.public_delegate_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_public_delegate_should_be_private_field.severity = warning
dotnet_naming_rule.non_public_delegate_should_be_private_field.symbols = non_public_delegate
dotnet_naming_rule.non_public_delegate_should_be_private_field.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.enum.applicable_kinds = enum
dotnet_naming_symbols.enum.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.enum.required_modifiers =

dotnet_naming_symbols.public_delegate.applicable_kinds = event, delegate
dotnet_naming_symbols.public_delegate.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_delegate.required_modifiers =

dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = public
dotnet_naming_symbols.method.required_modifiers =

dotnet_naming_symbols.public_static_field.applicable_kinds = field
dotnet_naming_symbols.public_static_field.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_static_field.required_modifiers = static

dotnet_naming_symbols.field.applicable_kinds = field
dotnet_naming_symbols.field.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.field.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.non_public_const_member.applicable_kinds = field, local
dotnet_naming_symbols.non_public_const_member.applicable_accessibilities = private, protected, protected_internal, private_protected, local
dotnet_naming_symbols.non_public_const_member.required_modifiers = const

dotnet_naming_symbols.local_varaible.applicable_kinds = local
dotnet_naming_symbols.local_varaible.applicable_accessibilities = local
dotnet_naming_symbols.local_varaible.required_modifiers =

dotnet_naming_symbols.async_method_or_function.applicable_kinds = method, local_function
dotnet_naming_symbols.async_method_or_function.applicable_accessibilities = *
dotnet_naming_symbols.async_method_or_function.required_modifiers = async

dotnet_naming_symbols.non_public_delegate.applicable_kinds = event, delegate
dotnet_naming_symbols.non_public_delegate.applicable_accessibilities = private, protected, protected_internal, private_protected, local
dotnet_naming_symbols.non_public_delegate.required_modifiers =

dotnet_naming_symbols.non_public_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_public_static_readonly_fields.applicable_accessibilities = private, protected, protected_internal, private_protected, local
dotnet_naming_symbols.non_public_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.public_const_field.applicable_kinds = field
dotnet_naming_symbols.public_const_field.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_const_field.required_modifiers = const

dotnet_naming_symbols.public_static_readonly_field.applicable_kinds = field
dotnet_naming_symbols.public_static_readonly_field.applicable_accessibilities = public, internal
dotnet_naming_symbols.public_static_readonly_field.required_modifiers = readonly, static

# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.private_field.required_prefix = _
dotnet_naming_style.private_field.required_suffix =
dotnet_naming_style.private_field.word_separator =
dotnet_naming_style.private_field.capitalization = camel_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.async_pascal_case.required_prefix =
dotnet_naming_style.async_pascal_case.required_suffix = Async
dotnet_naming_style.async_pascal_case.word_separator =
dotnet_naming_style.async_pascal_case.capitalization = pascal_case
csharp_prefer_system_threading_lock = true:suggestion
csharp_style_prefer_unbound_generic_type_in_nameof = true:suggestion
csharp_prefer_static_anonymous_function = true:suggestion
csharp_style_prefer_implicitly_typed_lambda_expression = true:suggestion

[*.{cs,vb}]
dotnet_style_readonly_field = false:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_require_accessibility_modifiers = omit_if_default:silent
dotnet_style_allow_multiple_blank_lines_experimental = false:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent
dotnet_code_quality_unused_parameters = all:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_collection_expression = when_types_exactly_match:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_namespace_match_folder = true:suggestion
dotnet_diagnostic.CA1859.severity = none

dotnet_diagnostic.CA1860.severity = none       # Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1031.severity = warning    # Don’t catch System.Exception
dotnet_diagnostic.CA2200.severity = warning    # Use 'throw;' to preserve stack
dotnet_diagnostic.CA2219.severity = warning    # Don’t throw in finally/filter
dotnet_diagnostic.CA1065.severity = warning    # Avoid throwing from unexpected members
dotnet_diagnostic.CA2201.severity = warning    # Don’t throw reserved/general exception types
dotnet_diagnostic.CA1510.severity = suggestion # Prefer ThrowIfNull

[*.{xml,csproj,json}]
tab_width = 4
indent_size = 4
end_of_line = crlf
indent_style = space
