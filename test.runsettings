<?xml version="1.0" encoding="utf-8"?>
<!--
dotnet test <project> <dash dash>settings test.runsettings
For more information on using a .runsettings file, see https://aka.ms/vstest-runsettings
-->
<RunSettings>
    <RunConfiguration>
        <ResultsDirectory>../../../TestResults</ResultsDirectory>
        <CollectSourceInformation>true</CollectSourceInformation>
        <MaxCpuCount>0</MaxCpuCount>
    </RunConfiguration>
    <xUnit>
        <!--
        See https://xunit.net/docs/config-runsettings
        Instead you can use:
        dotnet test <project> <dash dash> xUnit.AppDomain=denied xUnit.ParallelizeTestCollections=false etc
        -->
        <AppDomain>denied</AppDomain> <!-- "required", "denied", "ifAvailable" -->
        <Culture>en-US</Culture>
        <DiagnosticMessages>false</DiagnosticMessages> <!-- true to enable, false to disable -->
        <InternalDiagnostics>false</InternalDiagnostics> <!-- true to enable, false to disable -->
        <LongRunningTestSeconds>5</LongRunningTestSeconds> <!-- 0 to disable -->
        <MaxParallelThreads>-1</MaxParallelThreads>
        <!--
        -1 - let xUnit decide, which is usually optimal
        0 - no parallelization
        1 - no parallelization
        2 and up - number of threads to use
        0.5x, 1.5x, 2x, etc - factor of the number of processors on the machine
        -->
        <AssertEquivalentMaxDepth>50</AssertEquivalentMaxDepth>
        <MethodDisplay>classAndMethos</MethodDisplay> <!-- method, classAndMethod -->
        <MethodDisplayOptions></MethodDisplayOptions> <!-- "all", or comma separated: "replaceUnderscoreWithSpace", "useOperatorMonikers"..., "useParameterTypes", "useEscapeSequences" Xnn or Unnnn, "replacePeriodWithComma" -->
        <NoAutoReporters>false</NoAutoReporters>
        <ParallelAlgorithm>conservative</ParallelAlgorithm> <!-- aggressive -->
        <ParallelizeTestCollections>false</ParallelizeTestCollections>
        <ParallelizeAssembly>false</ParallelizeAssembly>
        <ParallelizeTestCollections>true</ParallelizeTestCollections>
        <PreEnumerateTheories>true</PreEnumerateTheories>
        <PrintMaxEnumerableLength>5</PrintMaxEnumerableLength>
        <PrintMaxObjectDepth>3</PrintMaxObjectDepth>
        <PrintMaxObjectMemberCount>5</PrintMaxObjectMemberCount>
        <PrintMaxStringLength>50</PrintMaxStringLength>
        <!--<seed>some integer value</seed>-->
        <ReporterSwitch>json</ReporterSwitch> <!-- verbose, quiet, silent, json, teamcity -->
        <!--
        In order to see the reporter output, you will need to change the verbosity level of the console reporter. In Visual Studio,
        you can do this by opening the Options settings, navigating to Test > General, and the setting the drop down under
        "Logging Level" to "Diagnostic" (the logs in Visual Studio will appear in the Output window, under "Tests"). From the
        command line, you can pass <dash dash>logger "console;verbosity=normal" on the dotnet test command line.
        -->
        <ShadowCopy>true</ShadowCopy>
        <ShowLiveOutput>false</ShowLiveOutput>
        <Explicit>off</Explicit> <!-- on, off, only -->
        <FailSkips>false</FailSkips>
        <FailWarns>false</FailWarns>
        <StopOnFail>false</StopOnFail>
    </xUnit>
    <!-- Configurations for data collectors -->
    <DataCollectionRunSettings>
        <DataCollectors>
            <DataCollector friendlyName="XPlat code coverage">
                <Configuration>
                    <Format>cobertura,json,lcov</Format>
                    <OutputDirectory>Coverage</OutputDirectory>
                    <FileName>coverage.cobertura.xml</FileName>
                    <Exclude>
                        <Namespace>System.CodeDom.Compiler.GeneratedCodeAttribute</Namespace>
                    </Exclude>
                    <ExcludeByAttribute>Obsolete,GeneratedCodeAttribute,CompilerGeneratedAttribute</ExcludeByAttribute>
                    <SkipAutoProps>true</SkipAutoProps>
                </Configuration>
            </DataCollector>
        </DataCollectors>
    </DataCollectionRunSettings>
</RunSettings>
